window.pdocSearch = (function(){
/** elasticlunr - http://weixsong.github.io * Copyright (C) 2017 Oliver Nightingale * Copyright (C) 2017 Wei Song * MIT Licensed */!function(){function e(e){if(null===e||"object"!=typeof e)return e;var t=e.constructor();for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);return t}var t=function(e){var n=new t.Index;return n.pipeline.add(t.trimmer,t.stopWordFilter,t.stemmer),e&&e.call(n,n),n};t.version="0.9.5",lunr=t,t.utils={},t.utils.warn=function(e){return function(t){e.console&&console.warn&&console.warn(t)}}(this),t.utils.toString=function(e){return void 0===e||null===e?"":e.toString()},t.EventEmitter=function(){this.events={}},t.EventEmitter.prototype.addListener=function(){var e=Array.prototype.slice.call(arguments),t=e.pop(),n=e;if("function"!=typeof t)throw new TypeError("last argument must be a function");n.forEach(function(e){this.hasHandler(e)||(this.events[e]=[]),this.events[e].push(t)},this)},t.EventEmitter.prototype.removeListener=function(e,t){if(this.hasHandler(e)){var n=this.events[e].indexOf(t);-1!==n&&(this.events[e].splice(n,1),0==this.events[e].length&&delete this.events[e])}},t.EventEmitter.prototype.emit=function(e){if(this.hasHandler(e)){var t=Array.prototype.slice.call(arguments,1);this.events[e].forEach(function(e){e.apply(void 0,t)},this)}},t.EventEmitter.prototype.hasHandler=function(e){return e in this.events},t.tokenizer=function(e){if(!arguments.length||null===e||void 0===e)return[];if(Array.isArray(e)){var n=e.filter(function(e){return null===e||void 0===e?!1:!0});n=n.map(function(e){return t.utils.toString(e).toLowerCase()});var i=[];return n.forEach(function(e){var n=e.split(t.tokenizer.seperator);i=i.concat(n)},this),i}return e.toString().trim().toLowerCase().split(t.tokenizer.seperator)},t.tokenizer.defaultSeperator=/[\s\-]+/,t.tokenizer.seperator=t.tokenizer.defaultSeperator,t.tokenizer.setSeperator=function(e){null!==e&&void 0!==e&&"object"==typeof e&&(t.tokenizer.seperator=e)},t.tokenizer.resetSeperator=function(){t.tokenizer.seperator=t.tokenizer.defaultSeperator},t.tokenizer.getSeperator=function(){return t.tokenizer.seperator},t.Pipeline=function(){this._queue=[]},t.Pipeline.registeredFunctions={},t.Pipeline.registerFunction=function(e,n){n in t.Pipeline.registeredFunctions&&t.utils.warn("Overwriting existing registered function: "+n),e.label=n,t.Pipeline.registeredFunctions[n]=e},t.Pipeline.getRegisteredFunction=function(e){return e in t.Pipeline.registeredFunctions!=!0?null:t.Pipeline.registeredFunctions[e]},t.Pipeline.warnIfFunctionNotRegistered=function(e){var n=e.label&&e.label in this.registeredFunctions;n||t.utils.warn("Function is not registered with pipeline. This may cause problems when serialising the index.\n",e)},t.Pipeline.load=function(e){var n=new t.Pipeline;return e.forEach(function(e){var i=t.Pipeline.getRegisteredFunction(e);if(!i)throw new Error("Cannot load un-registered function: "+e);n.add(i)}),n},t.Pipeline.prototype.add=function(){var e=Array.prototype.slice.call(arguments);e.forEach(function(e){t.Pipeline.warnIfFunctionNotRegistered(e),this._queue.push(e)},this)},t.Pipeline.prototype.after=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i+1,0,n)},t.Pipeline.prototype.before=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i,0,n)},t.Pipeline.prototype.remove=function(e){var t=this._queue.indexOf(e);-1!==t&&this._queue.splice(t,1)},t.Pipeline.prototype.run=function(e){for(var t=[],n=e.length,i=this._queue.length,o=0;n>o;o++){for(var r=e[o],s=0;i>s&&(r=this._queue[s](r,o,e),void 0!==r&&null!==r);s++);void 0!==r&&null!==r&&t.push(r)}return t},t.Pipeline.prototype.reset=function(){this._queue=[]},t.Pipeline.prototype.get=function(){return this._queue},t.Pipeline.prototype.toJSON=function(){return this._queue.map(function(e){return t.Pipeline.warnIfFunctionNotRegistered(e),e.label})},t.Index=function(){this._fields=[],this._ref="id",this.pipeline=new t.Pipeline,this.documentStore=new t.DocumentStore,this.index={},this.eventEmitter=new t.EventEmitter,this._idfCache={},this.on("add","remove","update",function(){this._idfCache={}}.bind(this))},t.Index.prototype.on=function(){var e=Array.prototype.slice.call(arguments);return this.eventEmitter.addListener.apply(this.eventEmitter,e)},t.Index.prototype.off=function(e,t){return this.eventEmitter.removeListener(e,t)},t.Index.load=function(e){e.version!==t.version&&t.utils.warn("version mismatch: current "+t.version+" importing "+e.version);var n=new this;n._fields=e.fields,n._ref=e.ref,n.documentStore=t.DocumentStore.load(e.documentStore),n.pipeline=t.Pipeline.load(e.pipeline),n.index={};for(var i in e.index)n.index[i]=t.InvertedIndex.load(e.index[i]);return n},t.Index.prototype.addField=function(e){return this._fields.push(e),this.index[e]=new t.InvertedIndex,this},t.Index.prototype.setRef=function(e){return this._ref=e,this},t.Index.prototype.saveDocument=function(e){return this.documentStore=new t.DocumentStore(e),this},t.Index.prototype.addDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.addDoc(i,e),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));this.documentStore.addFieldLength(i,n,o.length);var r={};o.forEach(function(e){e in r?r[e]+=1:r[e]=1},this);for(var s in r){var u=r[s];u=Math.sqrt(u),this.index[n].addToken(s,{ref:i,tf:u})}},this),n&&this.eventEmitter.emit("add",e,this)}},t.Index.prototype.removeDocByRef=function(e){if(e&&this.documentStore.isDocStored()!==!1&&this.documentStore.hasDoc(e)){var t=this.documentStore.getDoc(e);this.removeDoc(t,!1)}},t.Index.prototype.removeDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.hasDoc(i)&&(this.documentStore.removeDoc(i),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));o.forEach(function(e){this.index[n].removeToken(e,i)},this)},this),n&&this.eventEmitter.emit("remove",e,this))}},t.Index.prototype.updateDoc=function(e,t){var t=void 0===t?!0:t;this.removeDocByRef(e[this._ref],!1),this.addDoc(e,!1),t&&this.eventEmitter.emit("update",e,this)},t.Index.prototype.idf=function(e,t){var n="@"+t+"/"+e;if(Object.prototype.hasOwnProperty.call(this._idfCache,n))return this._idfCache[n];var i=this.index[t].getDocFreq(e),o=1+Math.log(this.documentStore.length/(i+1));return this._idfCache[n]=o,o},t.Index.prototype.getFields=function(){return this._fields.slice()},t.Index.prototype.search=function(e,n){if(!e)return[];e="string"==typeof e?{any:e}:JSON.parse(JSON.stringify(e));var i=null;null!=n&&(i=JSON.stringify(n));for(var o=new t.Configuration(i,this.getFields()).get(),r={},s=Object.keys(e),u=0;u<s.length;u++){var a=s[u];r[a]=this.pipeline.run(t.tokenizer(e[a]))}var l={};for(var c in o){var d=r[c]||r.any;if(d){var f=this.fieldSearch(d,c,o),h=o[c].boost;for(var p in f)f[p]=f[p]*h;for(var p in f)p in l?l[p]+=f[p]:l[p]=f[p]}}var v,g=[];for(var p in l)v={ref:p,score:l[p]},this.documentStore.hasDoc(p)&&(v.doc=this.documentStore.getDoc(p)),g.push(v);return g.sort(function(e,t){return t.score-e.score}),g},t.Index.prototype.fieldSearch=function(e,t,n){var i=n[t].bool,o=n[t].expand,r=n[t].boost,s=null,u={};return 0!==r?(e.forEach(function(e){var n=[e];1==o&&(n=this.index[t].expandToken(e));var r={};n.forEach(function(n){var o=this.index[t].getDocs(n),a=this.idf(n,t);if(s&&"AND"==i){var l={};for(var c in s)c in o&&(l[c]=o[c]);o=l}n==e&&this.fieldSearchStats(u,n,o);for(var c in o){var d=this.index[t].getTermFrequency(n,c),f=this.documentStore.getFieldLength(c,t),h=1;0!=f&&(h=1/Math.sqrt(f));var p=1;n!=e&&(p=.15*(1-(n.length-e.length)/n.length));var v=d*a*h*p;c in r?r[c]+=v:r[c]=v}},this),s=this.mergeScores(s,r,i)},this),s=this.coordNorm(s,u,e.length)):void 0},t.Index.prototype.mergeScores=function(e,t,n){if(!e)return t;if("AND"==n){var i={};for(var o in t)o in e&&(i[o]=e[o]+t[o]);return i}for(var o in t)o in e?e[o]+=t[o]:e[o]=t[o];return e},t.Index.prototype.fieldSearchStats=function(e,t,n){for(var i in n)i in e?e[i].push(t):e[i]=[t]},t.Index.prototype.coordNorm=function(e,t,n){for(var i in e)if(i in t){var o=t[i].length;e[i]=e[i]*o/n}return e},t.Index.prototype.toJSON=function(){var e={};return this._fields.forEach(function(t){e[t]=this.index[t].toJSON()},this),{version:t.version,fields:this._fields,ref:this._ref,documentStore:this.documentStore.toJSON(),index:e,pipeline:this.pipeline.toJSON()}},t.Index.prototype.use=function(e){var t=Array.prototype.slice.call(arguments,1);t.unshift(this),e.apply(this,t)},t.DocumentStore=function(e){this._save=null===e||void 0===e?!0:e,this.docs={},this.docInfo={},this.length=0},t.DocumentStore.load=function(e){var t=new this;return t.length=e.length,t.docs=e.docs,t.docInfo=e.docInfo,t._save=e.save,t},t.DocumentStore.prototype.isDocStored=function(){return this._save},t.DocumentStore.prototype.addDoc=function(t,n){this.hasDoc(t)||this.length++,this.docs[t]=this._save===!0?e(n):null},t.DocumentStore.prototype.getDoc=function(e){return this.hasDoc(e)===!1?null:this.docs[e]},t.DocumentStore.prototype.hasDoc=function(e){return e in this.docs},t.DocumentStore.prototype.removeDoc=function(e){this.hasDoc(e)&&(delete this.docs[e],delete this.docInfo[e],this.length--)},t.DocumentStore.prototype.addFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&(this.docInfo[e]||(this.docInfo[e]={}),this.docInfo[e][t]=n)},t.DocumentStore.prototype.updateFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&this.addFieldLength(e,t,n)},t.DocumentStore.prototype.getFieldLength=function(e,t){return null===e||void 0===e?0:e in this.docs&&t in this.docInfo[e]?this.docInfo[e][t]:0},t.DocumentStore.prototype.toJSON=function(){return{docs:this.docs,docInfo:this.docInfo,length:this.length,save:this._save}},t.stemmer=function(){var e={ational:"ate",tional:"tion",enci:"ence",anci:"ance",izer:"ize",bli:"ble",alli:"al",entli:"ent",eli:"e",ousli:"ous",ization:"ize",ation:"ate",ator:"ate",alism:"al",iveness:"ive",fulness:"ful",ousness:"ous",aliti:"al",iviti:"ive",biliti:"ble",logi:"log"},t={icate:"ic",ative:"",alize:"al",iciti:"ic",ical:"ic",ful:"",ness:""},n="[^aeiou]",i="[aeiouy]",o=n+"[^aeiouy]*",r=i+"[aeiou]*",s="^("+o+")?"+r+o,u="^("+o+")?"+r+o+"("+r+")?$",a="^("+o+")?"+r+o+r+o,l="^("+o+")?"+i,c=new RegExp(s),d=new RegExp(a),f=new RegExp(u),h=new RegExp(l),p=/^(.+?)(ss|i)es$/,v=/^(.+?)([^s])s$/,g=/^(.+?)eed$/,m=/^(.+?)(ed|ing)$/,y=/.$/,S=/(at|bl|iz)$/,x=new RegExp("([^aeiouylsz])\\1$"),w=new RegExp("^"+o+i+"[^aeiouwxy]$"),I=/^(.+?[^aeiou])y$/,b=/^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/,E=/^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/,D=/^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/,F=/^(.+?)(s|t)(ion)$/,_=/^(.+?)e$/,P=/ll$/,k=new RegExp("^"+o+i+"[^aeiouwxy]$"),z=function(n){var i,o,r,s,u,a,l;if(n.length<3)return n;if(r=n.substr(0,1),"y"==r&&(n=r.toUpperCase()+n.substr(1)),s=p,u=v,s.test(n)?n=n.replace(s,"$1$2"):u.test(n)&&(n=n.replace(u,"$1$2")),s=g,u=m,s.test(n)){var z=s.exec(n);s=c,s.test(z[1])&&(s=y,n=n.replace(s,""))}else if(u.test(n)){var z=u.exec(n);i=z[1],u=h,u.test(i)&&(n=i,u=S,a=x,l=w,u.test(n)?n+="e":a.test(n)?(s=y,n=n.replace(s,"")):l.test(n)&&(n+="e"))}if(s=I,s.test(n)){var z=s.exec(n);i=z[1],n=i+"i"}if(s=b,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+e[o])}if(s=E,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+t[o])}if(s=D,u=F,s.test(n)){var z=s.exec(n);i=z[1],s=d,s.test(i)&&(n=i)}else if(u.test(n)){var z=u.exec(n);i=z[1]+z[2],u=d,u.test(i)&&(n=i)}if(s=_,s.test(n)){var z=s.exec(n);i=z[1],s=d,u=f,a=k,(s.test(i)||u.test(i)&&!a.test(i))&&(n=i)}return s=P,u=d,s.test(n)&&u.test(n)&&(s=y,n=n.replace(s,"")),"y"==r&&(n=r.toLowerCase()+n.substr(1)),n};return z}(),t.Pipeline.registerFunction(t.stemmer,"stemmer"),t.stopWordFilter=function(e){return e&&t.stopWordFilter.stopWords[e]!==!0?e:void 0},t.clearStopWords=function(){t.stopWordFilter.stopWords={}},t.addStopWords=function(e){null!=e&&Array.isArray(e)!==!1&&e.forEach(function(e){t.stopWordFilter.stopWords[e]=!0},this)},t.resetStopWords=function(){t.stopWordFilter.stopWords=t.defaultStopWords},t.defaultStopWords={"":!0,a:!0,able:!0,about:!0,across:!0,after:!0,all:!0,almost:!0,also:!0,am:!0,among:!0,an:!0,and:!0,any:!0,are:!0,as:!0,at:!0,be:!0,because:!0,been:!0,but:!0,by:!0,can:!0,cannot:!0,could:!0,dear:!0,did:!0,"do":!0,does:!0,either:!0,"else":!0,ever:!0,every:!0,"for":!0,from:!0,get:!0,got:!0,had:!0,has:!0,have:!0,he:!0,her:!0,hers:!0,him:!0,his:!0,how:!0,however:!0,i:!0,"if":!0,"in":!0,into:!0,is:!0,it:!0,its:!0,just:!0,least:!0,let:!0,like:!0,likely:!0,may:!0,me:!0,might:!0,most:!0,must:!0,my:!0,neither:!0,no:!0,nor:!0,not:!0,of:!0,off:!0,often:!0,on:!0,only:!0,or:!0,other:!0,our:!0,own:!0,rather:!0,said:!0,say:!0,says:!0,she:!0,should:!0,since:!0,so:!0,some:!0,than:!0,that:!0,the:!0,their:!0,them:!0,then:!0,there:!0,these:!0,they:!0,"this":!0,tis:!0,to:!0,too:!0,twas:!0,us:!0,wants:!0,was:!0,we:!0,were:!0,what:!0,when:!0,where:!0,which:!0,"while":!0,who:!0,whom:!0,why:!0,will:!0,"with":!0,would:!0,yet:!0,you:!0,your:!0},t.stopWordFilter.stopWords=t.defaultStopWords,t.Pipeline.registerFunction(t.stopWordFilter,"stopWordFilter"),t.trimmer=function(e){if(null===e||void 0===e)throw new Error("token should not be undefined");return e.replace(/^\W+/,"").replace(/\W+$/,"")},t.Pipeline.registerFunction(t.trimmer,"trimmer"),t.InvertedIndex=function(){this.root={docs:{},df:0}},t.InvertedIndex.load=function(e){var t=new this;return t.root=e.root,t},t.InvertedIndex.prototype.addToken=function(e,t,n){for(var n=n||this.root,i=0;i<=e.length-1;){var o=e[i];o in n||(n[o]={docs:{},df:0}),i+=1,n=n[o]}var r=t.ref;n.docs[r]?n.docs[r]={tf:t.tf}:(n.docs[r]={tf:t.tf},n.df+=1)},t.InvertedIndex.prototype.hasToken=function(e){if(!e)return!1;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return!1;t=t[e[n]]}return!0},t.InvertedIndex.prototype.getNode=function(e){if(!e)return null;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return null;t=t[e[n]]}return t},t.InvertedIndex.prototype.getDocs=function(e){var t=this.getNode(e);return null==t?{}:t.docs},t.InvertedIndex.prototype.getTermFrequency=function(e,t){var n=this.getNode(e);return null==n?0:t in n.docs?n.docs[t].tf:0},t.InvertedIndex.prototype.getDocFreq=function(e){var t=this.getNode(e);return null==t?0:t.df},t.InvertedIndex.prototype.removeToken=function(e,t){if(e){var n=this.getNode(e);null!=n&&t in n.docs&&(delete n.docs[t],n.df-=1)}},t.InvertedIndex.prototype.expandToken=function(e,t,n){if(null==e||""==e)return[];var t=t||[];if(void 0==n&&(n=this.getNode(e),null==n))return t;n.df>0&&t.push(e);for(var i in n)"docs"!==i&&"df"!==i&&this.expandToken(e+i,t,n[i]);return t},t.InvertedIndex.prototype.toJSON=function(){return{root:this.root}},t.Configuration=function(e,n){var e=e||"";if(void 0==n||null==n)throw new Error("fields should not be null");this.config={};var i;try{i=JSON.parse(e),this.buildUserConfig(i,n)}catch(o){t.utils.warn("user configuration parse failed, will use default configuration"),this.buildDefaultConfig(n)}},t.Configuration.prototype.buildDefaultConfig=function(e){this.reset(),e.forEach(function(e){this.config[e]={boost:1,bool:"OR",expand:!1}},this)},t.Configuration.prototype.buildUserConfig=function(e,n){var i="OR",o=!1;if(this.reset(),"bool"in e&&(i=e.bool||i),"expand"in e&&(o=e.expand||o),"fields"in e)for(var r in e.fields)if(n.indexOf(r)>-1){var s=e.fields[r],u=o;void 0!=s.expand&&(u=s.expand),this.config[r]={boost:s.boost||0===s.boost?s.boost:1,bool:s.bool||i,expand:u}}else t.utils.warn("field name in user configuration not found in index instance fields");else this.addAllFields2UserConfig(i,o,n)},t.Configuration.prototype.addAllFields2UserConfig=function(e,t,n){n.forEach(function(n){this.config[n]={boost:1,bool:e,expand:t}},this)},t.Configuration.prototype.get=function(){return this.config},t.Configuration.prototype.reset=function(){this.config={}},lunr.SortedSet=function(){this.length=0,this.elements=[]},lunr.SortedSet.load=function(e){var t=new this;return t.elements=e,t.length=e.length,t},lunr.SortedSet.prototype.add=function(){var e,t;for(e=0;e<arguments.length;e++)t=arguments[e],~this.indexOf(t)||this.elements.splice(this.locationFor(t),0,t);this.length=this.elements.length},lunr.SortedSet.prototype.toArray=function(){return this.elements.slice()},lunr.SortedSet.prototype.map=function(e,t){return this.elements.map(e,t)},lunr.SortedSet.prototype.forEach=function(e,t){return this.elements.forEach(e,t)},lunr.SortedSet.prototype.indexOf=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;){if(r===e)return o;e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o]}return r===e?o:-1},lunr.SortedSet.prototype.locationFor=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;)e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o];return r>e?o:e>r?o+1:void 0},lunr.SortedSet.prototype.intersect=function(e){for(var t=new lunr.SortedSet,n=0,i=0,o=this.length,r=e.length,s=this.elements,u=e.elements;;){if(n>o-1||i>r-1)break;s[n]!==u[i]?s[n]<u[i]?n++:s[n]>u[i]&&i++:(t.add(s[n]),n++,i++)}return t},lunr.SortedSet.prototype.clone=function(){var e=new lunr.SortedSet;return e.elements=this.toArray(),e.length=e.elements.length,e},lunr.SortedSet.prototype.union=function(e){var t,n,i;this.length>=e.length?(t=this,n=e):(t=e,n=this),i=t.clone();for(var o=0,r=n.toArray();o<r.length;o++)i.add(r[o]);return i},lunr.SortedSet.prototype.toJSON=function(){return this.toArray()},function(e,t){"function"==typeof define&&define.amd?define(t):"object"==typeof exports?module.exports=t():e.elasticlunr=t()}(this,function(){return t})}();
    /** pdoc search index */const docs = [{"fullname": "arcrane", "modulename": "arcrane", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "arcrane.Arcrane", "modulename": "arcrane.Arcrane", "kind": "module", "doc": "<p>Copyright 2024 Resurgo</p>\n\n<p>Licensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at</p>\n\n<pre><code> https://www.apache.org/licenses/LICENSE-2.0\n</code></pre>\n\n<p>Unless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.</p>\n"}, {"fullname": "arcrane.Arcrane.script_dir", "modulename": "arcrane.Arcrane", "qualname": "script_dir", "kind": "variable", "doc": "<p></p>\n", "default_value": "$OLDPWD"}, {"fullname": "arcrane.Arcrane.Arcrane", "modulename": "arcrane.Arcrane", "qualname": "Arcrane", "kind": "class", "doc": "<p>A class that will initialize all the crane movements and devices.</p>\n\n<p>Args:\n    None</p>\n\n<p>Returns:\n    None</p>\n"}, {"fullname": "arcrane.Arcrane.Arcrane.__init__", "modulename": "arcrane.Arcrane", "qualname": "Arcrane.__init__", "kind": "function", "doc": "<p>Initiliazed movements for the crane and its devices.</p>\n\n<p>Args:\n    None</p>\n\n<p>Returns:\n    None</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">()</span>"}, {"fullname": "arcrane.Arcrane.Arcrane.arcrane", "modulename": "arcrane.Arcrane", "qualname": "Arcrane.arcrane", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "arcrane.Arcrane.Arcrane.setUpMovements", "modulename": "arcrane.Arcrane", "qualname": "Arcrane.setUpMovements", "kind": "function", "doc": "<p>Setup the motors and monitor the movements.</p>\n\n<p>Args:\n    None</p>\n\n<p>Returns:\n    None</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "arcrane.Arcrane.Arcrane.receive_message", "modulename": "arcrane.Arcrane", "qualname": "Arcrane.receive_message", "kind": "function", "doc": "<p>Method that receives the mesages from the callback handler.</p>\n\n<p>Args:\n    message (str) : The action message.</p>\n\n<p>Returns:\n    None</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">message</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "arcrane.Arcrane.Arcrane.cleanup", "modulename": "arcrane.Arcrane", "qualname": "Arcrane.cleanup", "kind": "function", "doc": "<p>Stop the motors movement.</p>\n\n<p>Args:\n    None</p>\n\n<p>Returns:\n    None</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "arcrane.LazyLoader", "modulename": "arcrane.LazyLoader", "kind": "module", "doc": "<p>Copyright 2024 Resurgo</p>\n\n<p>Licensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at</p>\n\n<pre><code> https://www.apache.org/licenses/LICENSE-2.0\n</code></pre>\n\n<p>Unless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.</p>\n"}, {"fullname": "arcrane.LazyLoader.LazyLoader", "modulename": "arcrane.LazyLoader", "qualname": "LazyLoader", "kind": "class", "doc": "<p>A class that will initialize the instances only when they are accessed for the first time.</p>\n\n<p>Args:\n    None</p>\n\n<p>Returns:\n    None</p>\n"}, {"fullname": "arcrane.LazyLoader.LazyLoader.get_utility", "modulename": "arcrane.LazyLoader", "qualname": "LazyLoader.get_utility", "kind": "function", "doc": "<p>Static method to get the utility instance.</p>\n\n<p>Args:\n    None</p>\n\n<p>Returns:\n    Object : returns the Utilities object.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "arcrane.LazyLoader.LazyLoader.get_arcrane", "modulename": "arcrane.LazyLoader", "qualname": "LazyLoader.get_arcrane", "kind": "function", "doc": "<p>Static method to get the arcrane instance.</p>\n\n<p>Args:\n    None</p>\n\n<p>Returns:\n    Object : returns the Arcrane object.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "arcrane.Utilities", "modulename": "arcrane.Utilities", "kind": "module", "doc": "<p>Copyright 2024 Resurgo</p>\n\n<p>Licensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at</p>\n\n<pre><code> https://www.apache.org/licenses/LICENSE-2.0\n</code></pre>\n\n<p>Unless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.</p>\n"}, {"fullname": "arcrane.Utilities.Utilities", "modulename": "arcrane.Utilities", "qualname": "Utilities", "kind": "class", "doc": "<p>This class is used to save and load the configuration settings.</p>\n\n<p>Args:\n    None</p>\n\n<p>Returns:\n    None</p>\n"}, {"fullname": "arcrane.Utilities.Utilities.__init__", "modulename": "arcrane.Utilities", "qualname": "Utilities.__init__", "kind": "function", "doc": "<p>Class initializer for new instance.</p>\n\n<p>Args:\n    cls (Class) : pointer.\n    args (dict) : class arguments.\n    kwargs (dict) : additional parameters.</p>\n\n<p>Returns:\n    instance : Class instance</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, {"fullname": "arcrane.Utilities.Utilities.config", "modulename": "arcrane.Utilities", "qualname": "Utilities.config", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;configparser.ConfigParser object&gt;"}, {"fullname": "arcrane.Utilities.Utilities.save_configuration", "modulename": "arcrane.Utilities", "qualname": "Utilities.save_configuration", "kind": "function", "doc": "<p>Save configuration settings.</p>\n\n<p>Args:\n    params (dict) : Parameters in dictionary to save the settings.</p>\n\n<p>Returns:\n    dict : Updated settings.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">params</span><span class=\"p\">:</span> <span class=\"nb\">dict</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "arcrane.Utilities.Utilities.get_configuration", "modulename": "arcrane.Utilities", "qualname": "Utilities.get_configuration", "kind": "function", "doc": "<p>Get the specific configuration setting.</p>\n\n<p>Args:\n    params (str) : Setting name.</p>\n\n<p>Returns:\n    str : value.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">param</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "arcrane.classes", "modulename": "arcrane.classes", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "arcrane.classes.CallbackHandler", "modulename": "arcrane.classes.CallbackHandler", "kind": "module", "doc": "<p>Copyright 2024 Resurgo</p>\n\n<p>Licensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at</p>\n\n<pre><code> https://www.apache.org/licenses/LICENSE-2.0\n</code></pre>\n\n<p>Unless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under</p>\n"}, {"fullname": "arcrane.classes.CallbackHandler.script_dir", "modulename": "arcrane.classes.CallbackHandler", "qualname": "script_dir", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;/home/joseph/Projects/arcrane/classes&#x27;"}, {"fullname": "arcrane.classes.CallbackHandler.CallbackHandler", "modulename": "arcrane.classes.CallbackHandler", "qualname": "CallbackHandler", "kind": "class", "doc": "<p>Publisher / Subscriber Class to send and receive messages.</p>\n\n<p>Args:\n    None</p>\n\n<p>Returns:\n    None</p>\n"}, {"fullname": "arcrane.classes.CallbackHandler.CallbackHandler.__init__", "modulename": "arcrane.classes.CallbackHandler", "qualname": "CallbackHandler.__init__", "kind": "function", "doc": "<p>CallbackHandler class initializer.</p>\n\n<p>Args:\n    None</p>\n\n<p>Return:\n    None</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">()</span>"}, {"fullname": "arcrane.classes.CallbackHandler.CallbackHandler.subscribers", "modulename": "arcrane.classes.CallbackHandler", "qualname": "CallbackHandler.subscribers", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "arcrane.classes.CallbackHandler.CallbackHandler.register_subscriber", "modulename": "arcrane.classes.CallbackHandler", "qualname": "CallbackHandler.register_subscriber", "kind": "function", "doc": "<p>Register a subscriber with an ID and their callback function.</p>\n\n<p>Args:\n    subscriber_id (str) : Unique ID for the subscriber.\n    callback: (function) : Function to be called when an event occurs.</p>\n\n<p>Returns:\n    None</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">subscriber_id</span>, </span><span class=\"param\"><span class=\"n\">callback</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "arcrane.classes.CallbackHandler.CallbackHandler.unregister_subscriber", "modulename": "arcrane.classes.CallbackHandler", "qualname": "CallbackHandler.unregister_subscriber", "kind": "function", "doc": "<p>Unregister a subscriber by their ID.</p>\n\n<p>Args:\n    subscriber_id (str) : Unique ID of the subscriber.</p>\n\n<p>Returns:\n    None</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">subscriber_id</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "arcrane.classes.CallbackHandler.CallbackHandler.notify_subscriber", "modulename": "arcrane.classes.CallbackHandler", "qualname": "CallbackHandler.notify_subscriber", "kind": "function", "doc": "<p>Notify a specific subscriber.</p>\n\n<p>Args:\n    subscriber_id (str) : The ID of the subscriber to notify.\n    message (str) : The message to send to the subscriber.</p>\n\n<p>Returns:\n    None</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">subscriber_id</span>, </span><span class=\"param\"><span class=\"n\">message</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "arcrane.classes.CallbackHandler.CallbackHandler.notify_all", "modulename": "arcrane.classes.CallbackHandler", "qualname": "CallbackHandler.notify_all", "kind": "function", "doc": "<p>Notify all subscribers.</p>\n\n<p>Args:\n    message (str) : The message to send to all subscribers.</p>\n\n<p>Returns:\n    None</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">message</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "arcrane.classes.CustomButton", "modulename": "arcrane.classes.CustomButton", "kind": "module", "doc": "<p>Copyright 2024 Resurgo</p>\n\n<p>Licensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at</p>\n\n<pre><code> https://www.apache.org/licenses/LICENSE-2.0\n</code></pre>\n\n<p>Unless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under</p>\n"}, {"fullname": "arcrane.classes.CustomButton.script_dir", "modulename": "arcrane.classes.CustomButton", "qualname": "script_dir", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;/home/joseph/Projects/arcrane/classes&#x27;"}, {"fullname": "arcrane.classes.CustomButton.CustomButton", "modulename": "arcrane.classes.CustomButton", "qualname": "CustomButton", "kind": "class", "doc": "<p>Custom gpiozero button class with additional parameter.</p>\n\n<p>Args:\n    None    </p>\n\n<p>Returns:\n    None</p>\n", "bases": "gpiozero.input_devices.Button"}, {"fullname": "arcrane.classes.CustomButton.CustomButton.__init__", "modulename": "arcrane.classes.CustomButton", "qualname": "CustomButton.__init__", "kind": "function", "doc": "<p>Custom gpiozero button initializer.</p>\n\n<p>Args:\ntag (str) : Button tag\nid (str) : Button identifier    </p>\n\n<p>Returns:\n    None</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">pin</span>, </span><span class=\"param\"><span class=\"n\">tag</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, {"fullname": "arcrane.classes.CustomButton.CustomButton.tag", "modulename": "arcrane.classes.CustomButton", "qualname": "CustomButton.tag", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "arcrane.classes.CustomButton.CustomButton.id", "modulename": "arcrane.classes.CustomButton", "qualname": "CustomButton.id", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "arcrane.classes.DeviceMovements", "modulename": "arcrane.classes.DeviceMovements", "kind": "module", "doc": "<p>Copyright 2024 Resurgo</p>\n\n<p>Licensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at</p>\n\n<pre><code> https://www.apache.org/licenses/LICENSE-2.0\n</code></pre>\n\n<p>Unless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under</p>\n"}, {"fullname": "arcrane.classes.DeviceMovements.script_dir", "modulename": "arcrane.classes.DeviceMovements", "qualname": "script_dir", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;/home/joseph/Projects/arcrane/classes&#x27;"}, {"fullname": "arcrane.classes.DeviceMovements.DeviceMovements", "modulename": "arcrane.classes.DeviceMovements", "qualname": "DeviceMovements", "kind": "class", "doc": "<p>Device movements class that will holds the motors added.</p>\n\n<p>Args:\n    None    </p>\n\n<p>Returns:\n    None</p>\n"}, {"fullname": "arcrane.classes.DeviceMovements.DeviceMovements.__init__", "modulename": "arcrane.classes.DeviceMovements", "qualname": "DeviceMovements.__init__", "kind": "function", "doc": "<p>Class initializer for the arcrane movements.</p>\n\n<p>Args:\n    movement (dict) : Dictionary data and movements object.\n    pins (list) : List of gpiozero pins.\n    id (str) : Identifier of the object.    </p>\n\n<p>Returns:\n    None</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">movements</span><span class=\"p\">:</span> <span class=\"nb\">dict</span>, </span><span class=\"param\"><span class=\"n\">pins</span><span class=\"p\">:</span> <span class=\"nb\">list</span>, </span><span class=\"param\"><span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span>)</span>"}, {"fullname": "arcrane.classes.DeviceMovements.DeviceMovements.down_movement", "modulename": "arcrane.classes.DeviceMovements", "qualname": "DeviceMovements.down_movement", "kind": "variable", "doc": "<p></p>\n", "annotation": ": classes.CustomButton.CustomButton"}, {"fullname": "arcrane.classes.DeviceMovements.DeviceMovements.up_movement", "modulename": "arcrane.classes.DeviceMovements", "qualname": "DeviceMovements.up_movement", "kind": "variable", "doc": "<p></p>\n", "annotation": ": classes.CustomButton.CustomButton"}, {"fullname": "arcrane.classes.DeviceMovements.DeviceMovements.right_movement", "modulename": "arcrane.classes.DeviceMovements", "qualname": "DeviceMovements.right_movement", "kind": "variable", "doc": "<p></p>\n", "annotation": ": classes.CustomButton.CustomButton"}, {"fullname": "arcrane.classes.DeviceMovements.DeviceMovements.left_movement", "modulename": "arcrane.classes.DeviceMovements", "qualname": "DeviceMovements.left_movement", "kind": "variable", "doc": "<p></p>\n", "annotation": ": classes.CustomButton.CustomButton"}, {"fullname": "arcrane.classes.DeviceMovements.DeviceMovements.joystick2_down_movement", "modulename": "arcrane.classes.DeviceMovements", "qualname": "DeviceMovements.joystick2_down_movement", "kind": "variable", "doc": "<p></p>\n", "annotation": ": classes.CustomButton.CustomButton"}, {"fullname": "arcrane.classes.DeviceMovements.DeviceMovements.joystick2_up_movement", "modulename": "arcrane.classes.DeviceMovements", "qualname": "DeviceMovements.joystick2_up_movement", "kind": "variable", "doc": "<p></p>\n", "annotation": ": classes.CustomButton.CustomButton"}, {"fullname": "arcrane.classes.DeviceMovements.DeviceMovements.joystick2_right_movement", "modulename": "arcrane.classes.DeviceMovements", "qualname": "DeviceMovements.joystick2_right_movement", "kind": "variable", "doc": "<p></p>\n", "annotation": ": classes.CustomButton.CustomButton"}, {"fullname": "arcrane.classes.DeviceMovements.DeviceMovements.joystick2_left_movement", "modulename": "arcrane.classes.DeviceMovements", "qualname": "DeviceMovements.joystick2_left_movement", "kind": "variable", "doc": "<p></p>\n", "annotation": ": classes.CustomButton.CustomButton"}, {"fullname": "arcrane.classes.DeviceMovements.DeviceMovements.joystick2_trigger_button", "modulename": "arcrane.classes.DeviceMovements", "qualname": "DeviceMovements.joystick2_trigger_button", "kind": "variable", "doc": "<p></p>\n", "annotation": ": classes.CustomButton.CustomButton"}, {"fullname": "arcrane.classes.DeviceMovements.DeviceMovements.joystick2_fire_button", "modulename": "arcrane.classes.DeviceMovements", "qualname": "DeviceMovements.joystick2_fire_button", "kind": "variable", "doc": "<p></p>\n", "annotation": ": classes.CustomButton.CustomButton"}, {"fullname": "arcrane.classes.DeviceMovements.DeviceMovements.mUpSwitch", "modulename": "arcrane.classes.DeviceMovements", "qualname": "DeviceMovements.mUpSwitch", "kind": "variable", "doc": "<p></p>\n", "annotation": ": classes.MicroSwitch.MicroSwitch"}, {"fullname": "arcrane.classes.DeviceMovements.DeviceMovements.mDownSwitch", "modulename": "arcrane.classes.DeviceMovements", "qualname": "DeviceMovements.mDownSwitch", "kind": "variable", "doc": "<p></p>\n", "annotation": ": classes.MicroSwitch.MicroSwitch"}, {"fullname": "arcrane.classes.DeviceMovements.DeviceMovements.mLeftSwitch", "modulename": "arcrane.classes.DeviceMovements", "qualname": "DeviceMovements.mLeftSwitch", "kind": "variable", "doc": "<p></p>\n", "annotation": ": classes.MicroSwitch.MicroSwitch"}, {"fullname": "arcrane.classes.DeviceMovements.DeviceMovements.mRightSwitch", "modulename": "arcrane.classes.DeviceMovements", "qualname": "DeviceMovements.mRightSwitch", "kind": "variable", "doc": "<p></p>\n", "annotation": ": classes.MicroSwitch.MicroSwitch"}, {"fullname": "arcrane.classes.DeviceMovements.DeviceMovements.motor_registry", "modulename": "arcrane.classes.DeviceMovements", "qualname": "DeviceMovements.motor_registry", "kind": "variable", "doc": "<p></p>\n", "default_value": "{}"}, {"fullname": "arcrane.classes.DeviceMovements.DeviceMovements.delegate", "modulename": "arcrane.classes.DeviceMovements", "qualname": "DeviceMovements.delegate", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;classes.CallbackHandler.CallbackHandler object&gt;"}, {"fullname": "arcrane.classes.DeviceMovements.DeviceMovements.steps", "modulename": "arcrane.classes.DeviceMovements", "qualname": "DeviceMovements.steps", "kind": "variable", "doc": "<p></p>\n", "default_value": "20"}, {"fullname": "arcrane.classes.DeviceMovements.DeviceMovements.ctr", "modulename": "arcrane.classes.DeviceMovements", "qualname": "DeviceMovements.ctr", "kind": "variable", "doc": "<p></p>\n", "default_value": "0"}, {"fullname": "arcrane.classes.DeviceMovements.DeviceMovements.last_state", "modulename": "arcrane.classes.DeviceMovements", "qualname": "DeviceMovements.last_state", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;&#x27;"}, {"fullname": "arcrane.classes.DeviceMovements.DeviceMovements.id", "modulename": "arcrane.classes.DeviceMovements", "qualname": "DeviceMovements.id", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "arcrane.classes.DeviceMovements.DeviceMovements.movements", "modulename": "arcrane.classes.DeviceMovements", "qualname": "DeviceMovements.movements", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "arcrane.classes.DeviceMovements.DeviceMovements.pins", "modulename": "arcrane.classes.DeviceMovements", "qualname": "DeviceMovements.pins", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "arcrane.classes.DeviceMovements.DeviceMovements.setUpJoystickMovement", "modulename": "arcrane.classes.DeviceMovements", "qualname": "DeviceMovements.setUpJoystickMovement", "kind": "function", "doc": "<p>Setup the joystick movements.</p>\n\n<p>Args:\n    None</p>\n\n<p>Returns:\n    None</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "arcrane.classes.DeviceMovements.DeviceMovements.addMovement", "modulename": "arcrane.classes.DeviceMovements", "qualname": "DeviceMovements.addMovement", "kind": "function", "doc": "<p>Configure the joystick movements and its corresponding GPIO Button.</p>\n\n<p>Args:\n    movement (str) : Movement of indicator (up,down,left,right)\n    pin (int) : GPIO pin\n    id (str) : Joystick identifier        </p>\n\n<p>Returns:\n    None</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">movement</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">pin</span><span class=\"p\">:</span> <span class=\"nb\">int</span>, </span><span class=\"param\"><span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "arcrane.classes.DeviceMovements.DeviceMovements.monitorMovements", "modulename": "arcrane.classes.DeviceMovements", "qualname": "DeviceMovements.monitorMovements", "kind": "function", "doc": "<p>Monitor the arcrane movements.</p>\n\n<p>Args:\n    None</p>\n\n<p>Return:\n    None</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "arcrane.classes.DeviceMovements.DeviceMovements.moveMotorBySteps", "modulename": "arcrane.classes.DeviceMovements", "qualname": "DeviceMovements.moveMotorBySteps", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">direction</span>,</span><span class=\"param\">\t<span class=\"n\">motor</span><span class=\"p\">:</span> <span class=\"n\">classes</span><span class=\"o\">.</span><span class=\"n\">PWMStepperMotor</span><span class=\"o\">.</span><span class=\"n\">PWMStepperMotor</span>,</span><span class=\"param\">\t<span class=\"n\">steps</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "arcrane.classes.DeviceMovements.DeviceMovements.monitorWebMovements", "modulename": "arcrane.classes.DeviceMovements", "qualname": "DeviceMovements.monitorWebMovements", "kind": "function", "doc": "<p>Monitor movements triggered from the web interface.</p>\n\n<p>Args:\n    movement (str) : Movement of the jouystick.</p>\n\n<p>Returns:\n    None</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">movement</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "arcrane.classes.DeviceMovements.DeviceMovements.configureMovement", "modulename": "arcrane.classes.DeviceMovements", "qualname": "DeviceMovements.configureMovement", "kind": "function", "doc": "<p>Configure the motors associated with the movement of the joystick.</p>\n\n<p>Args:\n    None</p>\n\n<p>Returns:\n    None</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "arcrane.classes.DeviceMovements.DeviceMovements.valid_index", "modulename": "arcrane.classes.DeviceMovements", "qualname": "DeviceMovements.valid_index", "kind": "function", "doc": "<p>Method to check if the index is valid inside a give list.</p>\n\n<p>Args:\n    lst: (list) : The source array.\n    index (int) : The index to check.    </p>\n\n<p>Returns:\n    Bool : returns the bool value.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">lst</span>, </span><span class=\"param\"><span class=\"n\">index</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "arcrane.classes.DeviceMovements.DeviceMovements.register_motor", "modulename": "arcrane.classes.DeviceMovements", "qualname": "DeviceMovements.register_motor", "kind": "function", "doc": "<p>Register a motor on a specific movement.</p>\n\n<p>Args:\n    tag (str) : Movement that the motor associated to.\n    motor (PWMStepperMotor) : Stepper motor object.    </p>\n\n<p>Returns:\n    None</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">tag</span>, </span><span class=\"param\"><span class=\"n\">motor</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "arcrane.classes.DeviceMovements.DeviceMovements.get_motor_by_tag", "modulename": "arcrane.classes.DeviceMovements", "qualname": "DeviceMovements.get_motor_by_tag", "kind": "function", "doc": "<p>Retrieve motor by the movement key</p>\n\n<p>Args:\n    tag (str) : Movement that the motor associated to.</p>\n\n<p>Returns:\n    motor (PWMStepperMotor) : Motor associated from the movement.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">tag</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "arcrane.classes.DeviceMovements.DeviceMovements.cleanupDevices", "modulename": "arcrane.classes.DeviceMovements", "qualname": "DeviceMovements.cleanupDevices", "kind": "function", "doc": "<p>Turn off stepper motors.</p>\n\n<p>Args:\n    None</p>\n\n<p>Returns:\n    None</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "arcrane.classes.DeviceType", "modulename": "arcrane.classes.DeviceType", "kind": "module", "doc": "<p>Copyright 2024 Resurgo</p>\n\n<p>Licensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at</p>\n\n<pre><code> https://www.apache.org/licenses/LICENSE-2.0\n</code></pre>\n\n<p>Unless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.</p>\n"}, {"fullname": "arcrane.classes.DeviceType.DeviceType", "modulename": "arcrane.classes.DeviceType", "qualname": "DeviceType", "kind": "class", "doc": "<p></p>\n", "bases": "enum.Enum"}, {"fullname": "arcrane.classes.DeviceType.DeviceType.STEPPER", "modulename": "arcrane.classes.DeviceType", "qualname": "DeviceType.STEPPER", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;DeviceType.STEPPER: 1&gt;"}, {"fullname": "arcrane.classes.DeviceType.DeviceType.SERVO", "modulename": "arcrane.classes.DeviceType", "qualname": "DeviceType.SERVO", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;DeviceType.SERVO: 2&gt;"}, {"fullname": "arcrane.classes.DeviceType.DeviceType.SWITCH", "modulename": "arcrane.classes.DeviceType", "qualname": "DeviceType.SWITCH", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;DeviceType.SWITCH: 3&gt;"}, {"fullname": "arcrane.classes.Directions", "modulename": "arcrane.classes.Directions", "kind": "module", "doc": "<p>Copyright 2024 Resurgo</p>\n\n<p>Licensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at</p>\n\n<pre><code> https://www.apache.org/licenses/LICENSE-2.0\n</code></pre>\n\n<p>Unless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.</p>\n"}, {"fullname": "arcrane.classes.Directions.Directions", "modulename": "arcrane.classes.Directions", "qualname": "Directions", "kind": "class", "doc": "<p></p>\n", "bases": "enum.Enum"}, {"fullname": "arcrane.classes.Directions.Directions.FORWARD", "modulename": "arcrane.classes.Directions", "qualname": "Directions.FORWARD", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Directions.FORWARD: 1&gt;"}, {"fullname": "arcrane.classes.Directions.Directions.BACKWARD", "modulename": "arcrane.classes.Directions", "qualname": "Directions.BACKWARD", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Directions.BACKWARD: 2&gt;"}, {"fullname": "arcrane.classes.Directions.Directions.LEFT", "modulename": "arcrane.classes.Directions", "qualname": "Directions.LEFT", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Directions.LEFT: 3&gt;"}, {"fullname": "arcrane.classes.Directions.Directions.RIGHT", "modulename": "arcrane.classes.Directions", "qualname": "Directions.RIGHT", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Directions.RIGHT: 4&gt;"}, {"fullname": "arcrane.classes.GenericDevice", "modulename": "arcrane.classes.GenericDevice", "kind": "module", "doc": "<p>Copyright 2024 Resurgo</p>\n\n<p>Licensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at</p>\n\n<pre><code> https://www.apache.org/licenses/LICENSE-2.0\n</code></pre>\n\n<p>Unless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.</p>\n"}, {"fullname": "arcrane.classes.GenericDevice.script_dir", "modulename": "arcrane.classes.GenericDevice", "qualname": "script_dir", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;/home/joseph/Projects/arcrane/classes&#x27;"}, {"fullname": "arcrane.classes.GenericDevice.GenericDevice", "modulename": "arcrane.classes.GenericDevice", "qualname": "GenericDevice", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "arcrane.classes.GenericDevice.GenericDevice.pin", "modulename": "arcrane.classes.GenericDevice", "qualname": "GenericDevice.pin", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "arcrane.classes.GenericDevice.GenericDevice.state", "modulename": "arcrane.classes.GenericDevice", "qualname": "GenericDevice.state", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "arcrane.classes.GenericDevice.GenericDevice.begin", "modulename": "arcrane.classes.GenericDevice", "qualname": "GenericDevice.begin", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "arcrane.classes.GenericDevice.GenericDevice.configure_pin", "modulename": "arcrane.classes.GenericDevice", "qualname": "GenericDevice.configure_pin", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">pin</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "arcrane.classes.GenericDevice.GenericDevice.turn_on", "modulename": "arcrane.classes.GenericDevice", "qualname": "GenericDevice.turn_on", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "arcrane.classes.GenericDevice.GenericDevice.turn_off", "modulename": "arcrane.classes.GenericDevice", "qualname": "GenericDevice.turn_off", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "arcrane.classes.GenericDevice.GenericDevice.set_state", "modulename": "arcrane.classes.GenericDevice", "qualname": "GenericDevice.set_state", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">state</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "arcrane.classes.GenericDevice.GenericDevice.get_state", "modulename": "arcrane.classes.GenericDevice", "qualname": "GenericDevice.get_state", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "arcrane.classes.MicroSwitch", "modulename": "arcrane.classes.MicroSwitch", "kind": "module", "doc": "<p>Copyright 2024 Resurgo</p>\n\n<p>Licensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at</p>\n\n<pre><code> https://www.apache.org/licenses/LICENSE-2.0\n</code></pre>\n\n<p>Unless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.</p>\n"}, {"fullname": "arcrane.classes.MicroSwitch.script_dir", "modulename": "arcrane.classes.MicroSwitch", "qualname": "script_dir", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;/home/joseph/Projects/arcrane/classes&#x27;"}, {"fullname": "arcrane.classes.MicroSwitch.MicroSwitch", "modulename": "arcrane.classes.MicroSwitch", "qualname": "MicroSwitch", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "arcrane.classes.MicroSwitch.MicroSwitch.__init__", "modulename": "arcrane.classes.MicroSwitch", "qualname": "MicroSwitch.__init__", "kind": "function", "doc": "<p>Class initializer that accepts the Servo device pin.</p>\n\n<p>Args:\n    None</p>\n\n<p>Returns:\n    None</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">pin</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span>)</span>"}, {"fullname": "arcrane.classes.MicroSwitch.MicroSwitch.didPressed", "modulename": "arcrane.classes.MicroSwitch", "qualname": "MicroSwitch.didPressed", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool"}, {"fullname": "arcrane.classes.MicroSwitch.MicroSwitch.switch", "modulename": "arcrane.classes.MicroSwitch", "qualname": "MicroSwitch.switch", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "arcrane.classes.MicroSwitch.MicroSwitch.on_button_pressed", "modulename": "arcrane.classes.MicroSwitch", "qualname": "MicroSwitch.on_button_pressed", "kind": "function", "doc": "<p>Action when button is pressed.</p>\n\n<p>Args:\n    None</p>\n\n<p>Returns:\n    None</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "arcrane.classes.MicroSwitch.MicroSwitch.on_button_released", "modulename": "arcrane.classes.MicroSwitch", "qualname": "MicroSwitch.on_button_released", "kind": "function", "doc": "<p>Action when button is released.</p>\n\n<p>Args:\n    None</p>\n\n<p>Returns:\n    None</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "arcrane.classes.PWMServoMotor", "modulename": "arcrane.classes.PWMServoMotor", "kind": "module", "doc": "<p>Copyright 2024 Resurgo</p>\n\n<p>Licensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at</p>\n\n<pre><code> https://www.apache.org/licenses/LICENSE-2.0\n</code></pre>\n\n<p>Unless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.</p>\n"}, {"fullname": "arcrane.classes.PWMServoMotor.script_dir", "modulename": "arcrane.classes.PWMServoMotor", "qualname": "script_dir", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;/home/joseph/Projects/arcrane/classes&#x27;"}, {"fullname": "arcrane.classes.PWMServoMotor.PWMServoMotor", "modulename": "arcrane.classes.PWMServoMotor", "qualname": "PWMServoMotor", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "arcrane.classes.PWMServoMotor.PWMServoMotor.__init__", "modulename": "arcrane.classes.PWMServoMotor", "qualname": "PWMServoMotor.__init__", "kind": "function", "doc": "<p>Default Class initializer with that accepts the Servo device pin.</p>\n\n<p>Args:\n    None</p>\n\n<p>Returns:\n    None</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">pin</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span>)</span>"}, {"fullname": "arcrane.classes.PWMServoMotor.PWMServoMotor.motor_servo", "modulename": "arcrane.classes.PWMServoMotor", "qualname": "PWMServoMotor.motor_servo", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "arcrane.classes.PWMServoMotor.PWMServoMotor.rotate_motor", "modulename": "arcrane.classes.PWMServoMotor", "qualname": "PWMServoMotor.rotate_motor", "kind": "function", "doc": "<p>Rotate the specified motor by position.</p>\n\n<p>Args:\n    pos (int) : Position of the servo.</p>\n\n<p>Returns:\n    None</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">pos</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "arcrane.classes.PWMStepperMotor", "modulename": "arcrane.classes.PWMStepperMotor", "kind": "module", "doc": "<p>Copyright 2024 Resurgo</p>\n\n<p>Licensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at</p>\n\n<pre><code> https://www.apache.org/licenses/LICENSE-2.0\n</code></pre>\n\n<p>Unless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.</p>\n"}, {"fullname": "arcrane.classes.PWMStepperMotor.script_dir", "modulename": "arcrane.classes.PWMStepperMotor", "qualname": "script_dir", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;/home/joseph/Projects/arcrane/classes&#x27;"}, {"fullname": "arcrane.classes.PWMStepperMotor.PWMStepperMotor", "modulename": "arcrane.classes.PWMStepperMotor", "qualname": "PWMStepperMotor", "kind": "class", "doc": "<p>Stepper motor class that will holds the motors added.</p>\n\n<h2 id=\"args\">Args:</h2>\n\n<p>None    </p>\n\n<h2 id=\"return\">Return:</h2>\n\n<p>None</p>\n"}, {"fullname": "arcrane.classes.PWMStepperMotor.PWMStepperMotor.__init__", "modulename": "arcrane.classes.PWMStepperMotor", "qualname": "PWMStepperMotor.__init__", "kind": "function", "doc": "<p>Stepper motor class initializer that accepts the Output device pin.</p>\n\n<h2 id=\"args\">Args:</h2>\n\n<p>step: int\n    The motor pin.\ndrive: int\n    The drive pin.\ndirection_forward: boolean\n    Boolean flag to determine the motor direction, clockwise &amp; counter clockwise.\nreversable: boolean<br />\n    Boolean flag to determine if the motor is reversable.\nreverse_movement: str\n    Reverse movement of the motor.\nmovement: str\n    The movement associated of the motor.    </p>\n\n<h2 id=\"return\">Return:</h2>\n\n<p>None</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">step</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">drive</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">direction_forward</span><span class=\"o\">=</span><span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">reversable</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">reverse_movement</span><span class=\"o\">=</span><span class=\"s1\">&#39;&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">movement</span><span class=\"o\">=</span><span class=\"s1\">&#39;&#39;</span></span>)</span>"}, {"fullname": "arcrane.classes.PWMStepperMotor.PWMStepperMotor.motor_step", "modulename": "arcrane.classes.PWMStepperMotor", "qualname": "PWMStepperMotor.motor_step", "kind": "variable", "doc": "<p></p>\n", "annotation": ": gpiozero.output_devices.OutputDevice"}, {"fullname": "arcrane.classes.PWMStepperMotor.PWMStepperMotor.motor_dir", "modulename": "arcrane.classes.PWMStepperMotor", "qualname": "PWMStepperMotor.motor_dir", "kind": "variable", "doc": "<p></p>\n", "annotation": ": gpiozero.output_devices.OutputDevice"}, {"fullname": "arcrane.classes.PWMStepperMotor.PWMStepperMotor.reversable", "modulename": "arcrane.classes.PWMStepperMotor", "qualname": "PWMStepperMotor.reversable", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool"}, {"fullname": "arcrane.classes.PWMStepperMotor.PWMStepperMotor.reverse_movement", "modulename": "arcrane.classes.PWMStepperMotor", "qualname": "PWMStepperMotor.reverse_movement", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "arcrane.classes.PWMStepperMotor.PWMStepperMotor.utility", "modulename": "arcrane.classes.PWMStepperMotor", "qualname": "PWMStepperMotor.utility", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Utilities.Utilities object&gt;"}, {"fullname": "arcrane.classes.PWMStepperMotor.PWMStepperMotor.step", "modulename": "arcrane.classes.PWMStepperMotor", "qualname": "PWMStepperMotor.step", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "arcrane.classes.PWMStepperMotor.PWMStepperMotor.drive", "modulename": "arcrane.classes.PWMStepperMotor", "qualname": "PWMStepperMotor.drive", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "arcrane.classes.PWMStepperMotor.PWMStepperMotor.direction_forward", "modulename": "arcrane.classes.PWMStepperMotor", "qualname": "PWMStepperMotor.direction_forward", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "arcrane.classes.PWMStepperMotor.PWMStepperMotor.movement", "modulename": "arcrane.classes.PWMStepperMotor", "qualname": "PWMStepperMotor.movement", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "arcrane.classes.PWMStepperMotor.PWMStepperMotor.setMotor", "modulename": "arcrane.classes.PWMStepperMotor", "qualname": "PWMStepperMotor.setMotor", "kind": "function", "doc": "<p>Setup and pin out output device.</p>\n\n<h2 id=\"args\">Args:</h2>\n\n<p>step: int\n    - stepper pin value.\ndrive: int\n    - drive pin value.\ndirection_forward: bool\n    - direction of the motor.</p>\n\n<h2 id=\"return\">Return:</h2>\n\n<p>None</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">step</span><span class=\"p\">:</span> <span class=\"nb\">int</span>, </span><span class=\"param\"><span class=\"n\">drive</span><span class=\"p\">:</span> <span class=\"nb\">int</span>, </span><span class=\"param\"><span class=\"n\">direction_forward</span><span class=\"o\">=</span><span class=\"kc\">True</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "arcrane.classes.PWMStepperMotor.PWMStepperMotor.rotate_motor", "modulename": "arcrane.classes.PWMStepperMotor", "qualname": "PWMStepperMotor.rotate_motor", "kind": "function", "doc": "<p>Rotate the specified motor one step.</p>\n\n<h2 id=\"args\">Args:</h2>\n\n<p>None</p>\n\n<h2 id=\"return\">Return:</h2>\n\n<p>None</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "arcrane.classes.PWMStepperMotor.PWMStepperMotor.rotate_motor2", "modulename": "arcrane.classes.PWMStepperMotor", "qualname": "PWMStepperMotor.rotate_motor2", "kind": "function", "doc": "<p>Rotate the specified motor one step.</p>\n\n<h2 id=\"args\">Args:</h2>\n\n<p>direction: boolean\n    Boolean flag to determine the motor direction, clockwise &amp; counter clockwise.</p>\n\n<h2 id=\"return\">Return:</h2>\n\n<p>None</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">direction</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "arcrane.classes.PWMStepperMotor.PWMStepperMotor.runMotor", "modulename": "arcrane.classes.PWMStepperMotor", "qualname": "PWMStepperMotor.runMotor", "kind": "function", "doc": "<p>Turn on &amp; off the motor.</p>\n\n<p>Args:\n    run (boolean) : Start or stop the motor movement.</p>\n\n<p>Returns:\n    None</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">run</span><span class=\"p\">:</span> <span class=\"nb\">bool</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "arcrane.constants", "modulename": "arcrane.constants", "kind": "module", "doc": "<p>Copyright 2024 Resurgo</p>\n\n<p>Licensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at</p>\n\n<pre><code> https://www.apache.org/licenses/LICENSE-2.0\n</code></pre>\n\n<p>Unless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.</p>\n"}, {"fullname": "arcrane.constants.DEFAULT_ANGLE", "modulename": "arcrane.constants", "qualname": "DEFAULT_ANGLE", "kind": "variable", "doc": "<p></p>\n", "default_value": "120"}, {"fullname": "arcrane.constants.DEFAULT_ROTATION", "modulename": "arcrane.constants", "qualname": "DEFAULT_ROTATION", "kind": "variable", "doc": "<p></p>\n", "default_value": "360"}, {"fullname": "arcrane.constants.STEPS_PER_REVOLUTION", "modulename": "arcrane.constants", "qualname": "STEPS_PER_REVOLUTION", "kind": "variable", "doc": "<p></p>\n", "default_value": "200"}, {"fullname": "arcrane.constants.DEGREES_PER_STEP", "modulename": "arcrane.constants", "qualname": "DEGREES_PER_STEP", "kind": "variable", "doc": "<p></p>\n", "default_value": "1.8"}, {"fullname": "arcrane.constants.STEPS_PER_90_DEGREES", "modulename": "arcrane.constants", "qualname": "STEPS_PER_90_DEGREES", "kind": "variable", "doc": "<p></p>\n", "default_value": "50"}, {"fullname": "arcrane.constants.STEP_DELAY", "modulename": "arcrane.constants", "qualname": "STEP_DELAY", "kind": "variable", "doc": "<p></p>\n", "default_value": "0.001"}, {"fullname": "arcrane.constants.SERVO_DELAY", "modulename": "arcrane.constants", "qualname": "SERVO_DELAY", "kind": "variable", "doc": "<p></p>\n", "default_value": "1"}, {"fullname": "arcrane.constants.SERVO_POSITION", "modulename": "arcrane.constants", "qualname": "SERVO_POSITION", "kind": "variable", "doc": "<p></p>\n", "default_value": "1"}, {"fullname": "arcrane.constants.J1_UP_PIN", "modulename": "arcrane.constants", "qualname": "J1_UP_PIN", "kind": "variable", "doc": "<p></p>\n", "default_value": "26"}, {"fullname": "arcrane.constants.J1_DOWN_PIN", "modulename": "arcrane.constants", "qualname": "J1_DOWN_PIN", "kind": "variable", "doc": "<p></p>\n", "default_value": "18"}, {"fullname": "arcrane.constants.J1_LEFT_PIN", "modulename": "arcrane.constants", "qualname": "J1_LEFT_PIN", "kind": "variable", "doc": "<p></p>\n", "default_value": "20"}, {"fullname": "arcrane.constants.J1_RIGHT_PIN", "modulename": "arcrane.constants", "qualname": "J1_RIGHT_PIN", "kind": "variable", "doc": "<p></p>\n", "default_value": "21"}, {"fullname": "arcrane.constants.M1_STEP_PIN", "modulename": "arcrane.constants", "qualname": "M1_STEP_PIN", "kind": "variable", "doc": "<p></p>\n", "default_value": "17"}, {"fullname": "arcrane.constants.M1_DIR_PIN", "modulename": "arcrane.constants", "qualname": "M1_DIR_PIN", "kind": "variable", "doc": "<p></p>\n", "default_value": "27"}, {"fullname": "arcrane.constants.M1_MOVEMENT", "modulename": "arcrane.constants", "qualname": "M1_MOVEMENT", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;up&#x27;"}, {"fullname": "arcrane.constants.M1_REVERSIBLE", "modulename": "arcrane.constants", "qualname": "M1_REVERSIBLE", "kind": "variable", "doc": "<p></p>\n", "default_value": "True"}, {"fullname": "arcrane.constants.M1_REVERSE_MOVEMENT", "modulename": "arcrane.constants", "qualname": "M1_REVERSE_MOVEMENT", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;down&#x27;"}, {"fullname": "arcrane.constants.M2_STEP_PIN", "modulename": "arcrane.constants", "qualname": "M2_STEP_PIN", "kind": "variable", "doc": "<p></p>\n", "default_value": "22"}, {"fullname": "arcrane.constants.M2_DIR_PIN", "modulename": "arcrane.constants", "qualname": "M2_DIR_PIN", "kind": "variable", "doc": "<p></p>\n", "default_value": "23"}, {"fullname": "arcrane.constants.M2_MOVEMENT", "modulename": "arcrane.constants", "qualname": "M2_MOVEMENT", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;up&#x27;"}, {"fullname": "arcrane.constants.M2_REVERSIBLE", "modulename": "arcrane.constants", "qualname": "M2_REVERSIBLE", "kind": "variable", "doc": "<p></p>\n", "default_value": "True"}, {"fullname": "arcrane.constants.M2_REVERSE_MOVEMENT", "modulename": "arcrane.constants", "qualname": "M2_REVERSE_MOVEMENT", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;down&#x27;"}, {"fullname": "arcrane.constants.M3_STEP_PIN", "modulename": "arcrane.constants", "qualname": "M3_STEP_PIN", "kind": "variable", "doc": "<p></p>\n", "default_value": "5"}, {"fullname": "arcrane.constants.M3_DIR_PIN", "modulename": "arcrane.constants", "qualname": "M3_DIR_PIN", "kind": "variable", "doc": "<p></p>\n", "default_value": "6"}, {"fullname": "arcrane.constants.M3_MOVEMENT", "modulename": "arcrane.constants", "qualname": "M3_MOVEMENT", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;left&#x27;"}, {"fullname": "arcrane.constants.M3_REVERSIBLE", "modulename": "arcrane.constants", "qualname": "M3_REVERSIBLE", "kind": "variable", "doc": "<p></p>\n", "default_value": "False"}, {"fullname": "arcrane.constants.M3_REVERSE_MOVEMENT", "modulename": "arcrane.constants", "qualname": "M3_REVERSE_MOVEMENT", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;&#x27;"}, {"fullname": "arcrane.constants.M4_STEP_PIN", "modulename": "arcrane.constants", "qualname": "M4_STEP_PIN", "kind": "variable", "doc": "<p></p>\n", "default_value": "12"}, {"fullname": "arcrane.constants.M4_DIR_PIN", "modulename": "arcrane.constants", "qualname": "M4_DIR_PIN", "kind": "variable", "doc": "<p></p>\n", "default_value": "13"}, {"fullname": "arcrane.constants.M4_MOVEMENT", "modulename": "arcrane.constants", "qualname": "M4_MOVEMENT", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;right&#x27;"}, {"fullname": "arcrane.constants.M4_REVERSIBLE", "modulename": "arcrane.constants", "qualname": "M4_REVERSIBLE", "kind": "variable", "doc": "<p></p>\n", "default_value": "False"}, {"fullname": "arcrane.constants.M4_REVERSE_MOVEMENT", "modulename": "arcrane.constants", "qualname": "M4_REVERSE_MOVEMENT", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;&#x27;"}, {"fullname": "arcrane.main", "modulename": "arcrane.main", "kind": "module", "doc": "<p>Copyright 2024 Resurgo</p>\n\n<p>Licensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at</p>\n\n<pre><code> https://www.apache.org/licenses/LICENSE-2.0\n</code></pre>\n\n<p>Unless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.</p>\n"}, {"fullname": "arcrane.main.script_dir", "modulename": "arcrane.main", "qualname": "script_dir", "kind": "variable", "doc": "<p></p>\n", "default_value": "$OLDPWD"}, {"fullname": "arcrane.main.craneSetup", "modulename": "arcrane.main", "qualname": "craneSetup", "kind": "function", "doc": "<p>Setup crane movements.</p>\n\n<p>Args:\n    None</p>\n\n<p>Returns:\n    None</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "arcrane.main.stop_event", "modulename": "arcrane.main", "qualname": "stop_event", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;threading.Event at 0x7fff276b6b90: unset&gt;"}, {"fullname": "arcrane.main.app", "modulename": "arcrane.main", "qualname": "app", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Flask &#x27;arcrane.main&#x27;&gt;"}, {"fullname": "arcrane.main.index", "modulename": "arcrane.main", "qualname": "index", "kind": "function", "doc": "<p>Web portal home page</p>\n\n<p>Args:\n    None</p>\n\n<p>Returns:\n    web page : index.html</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "arcrane.main.configuration", "modulename": "arcrane.main", "qualname": "configuration", "kind": "function", "doc": "<p>Configurations page.</p>\n\n<p>Args:\n    None</p>\n\n<p>Returns:\n    web page : configuration.html</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "arcrane.main.joystick", "modulename": "arcrane.main", "qualname": "joystick", "kind": "function", "doc": "<p>Configurations page.</p>\n\n<p>Args:\n    None</p>\n\n<p>Returns:\n    web page : configuration.html</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "arcrane.main.long_press", "modulename": "arcrane.main", "qualname": "long_press", "kind": "function", "doc": "<p>Method to handle the long press gesture and correspond to the movement of the joystick.</p>\n\n<p>Args:\n    direction (str) : The direction of the joystick\n    device (str) : The joystick selected.</p>\n\n<p>Returns:\n    str : status message</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">direction</span>, </span><span class=\"param\"><span class=\"n\">device</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "arcrane.main.cleanup", "modulename": "arcrane.main", "qualname": "cleanup", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "arcrane.main.run_flask", "modulename": "arcrane.main", "qualname": "run_flask", "kind": "function", "doc": "<p>Initialize flask instance.</p>\n\n<p>Args:\n    None</p>\n\n<p>Returns:\n    None</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "arcrane.main.worker", "modulename": "arcrane.main", "qualname": "worker", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "arcrane.main.enable_mosquitto_at_boot", "modulename": "arcrane.main", "qualname": "enable_mosquitto_at_boot", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "arcrane.main.check_dependencies", "modulename": "arcrane.main", "qualname": "check_dependencies", "kind": "function", "doc": "<p>Check if the required dependencies are installed.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">dependencies</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "arcrane.main.install_dependencies", "modulename": "arcrane.main", "qualname": "install_dependencies", "kind": "function", "doc": "<p>Attempt to install missing dependencies.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">missing</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "arcrane.main.main", "modulename": "arcrane.main", "qualname": "main", "kind": "function", "doc": "<p>Main function to run the app.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "arcrane.utilities", "modulename": "arcrane.utilities", "kind": "module", "doc": "<p></p>\n"}];

    // mirrored in build-search-index.js (part 1)
    // Also split on html tags. this is a cheap heuristic, but good enough.
    elasticlunr.tokenizer.setSeperator(/[\s\-.;&_'"=,()]+|<[^>]*>/);

    let searchIndex;
    if (docs._isPrebuiltIndex) {
        console.info("using precompiled search index");
        searchIndex = elasticlunr.Index.load(docs);
    } else {
        console.time("building search index");
        // mirrored in build-search-index.js (part 2)
        searchIndex = elasticlunr(function () {
            this.pipeline.remove(elasticlunr.stemmer);
            this.pipeline.remove(elasticlunr.stopWordFilter);
            this.addField("qualname");
            this.addField("fullname");
            this.addField("annotation");
            this.addField("default_value");
            this.addField("signature");
            this.addField("bases");
            this.addField("doc");
            this.setRef("fullname");
        });
        for (let doc of docs) {
            searchIndex.addDoc(doc);
        }
        console.timeEnd("building search index");
    }

    return (term) => searchIndex.search(term, {
        fields: {
            qualname: {boost: 4},
            fullname: {boost: 2},
            annotation: {boost: 2},
            default_value: {boost: 2},
            signature: {boost: 2},
            bases: {boost: 2},
            doc: {boost: 1},
        },
        expand: true
    });
})();